@page "/rooms"
@using Roomz.Data
@using Roomz.Services
@using BlazorInputFile
@using System.IO

@inherits OwningComponentBase<RoomService>

<AuthorizeView>
    <Authorized Context="Auth">

        @if (rooms == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="container border p-3">
                <div class="row">
                    <div class="col-5">
                        <h3 class="text-info">Room List</h3>
                    </div>
                    <div class="col-3">
                        <button class="btn btn-info form-control" @onclick="AddNewRoom">
                            Add New Room
                        </button>
                    </div>
                </div>
                <div class="row pt-4">
                    <table class="table table-striped">
                        <thead>
                            <tr>
                                <th>Id</th>
                                <th>Room Name</th>
                                @*<th>Price</th>
                                <th>Condition</th>
                                <th>Category</th>
                                <th style="text-align:center">Reserved</th>
                                <th></th>*@
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var obj in rooms)
                            {
                            <tr>
                                <td>@obj.Id</td>
                                <td>@obj.Name</td>
                                <td>@*@obj.Price*@</td>
                                <td>@*@obj.ShadeColor*@</td>
                                <td>@*@obj.User.Name*@</td>
                                @*<td style="text-align:center"><input type="checkbox" checked="@obj.schedule.Reservation" disabled/></td>*@
                                <td>
                                    <button class="btn btn-primary" style="width:150px" @onclick="(()=> EditRoom(obj))">
                                        Edit
                                    </button>
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

    </Authorized>
    <NotAuthorized> <p>You're not signed in!</p></NotAuthorized>
</AuthorizeView>

@if (ShowPopup)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <EditForm Model="@objRoom" OnValidSubmit="@ValidSubmit">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h3 class="text-info">@(objRoom.Id != 0 ? "Update" : "Create") Room</h3>

                        @*<h3 class="text-info">@(objRoom.Id != 0 ? "Update" : "Create") Room</h3>*@
                        <button type="button" class="close" @onclick="ClosePopup">
                            <span aria-hidden="true">X</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <DataAnnotationsValidator />
                        <ValidationSummary />
                        <div class="row">
                            <div class="col-9">
                                <div class="row py-2">
                                    <div class="col-4">
                                        Room Id
                                    </div>
                                    <div class="col-8">
                                        <InputNumber class="form-control" @bind-Value="objRoom.Id" readonly />
                                        @*<ValidationMessage For="@(()=> objRoom.Name)"></ValidationMessage>*@
                                    </div>
                                </div>
                                <div class="row py-2">
                                    <div class="col-4">
                                        Room Name
                                    </div>
                                    <div class="col-8">
                                        <InputText class="form-control" @bind-Value="objRoom.Name" />
                                        @*<ValidationMessage For="@(()=> objRoom.Name)"></ValidationMessage>*@
                                    </div>
                                </div>                               
                                @*<div class="row py-2">
                                    <div class="col-4">
                                        Reserved
                                    </div>
                                    <div class="col-8">
                                        <input type="checkbox" class="form-control" checked="@objRoom.Schedule.Reservation" @bind-value="objRoom.Reservation"/>
                                        <ValidationMessage For="@(()=> objRoom.Reservation)"></ValidationMessage>
                                    </div>
                                </div>*@
                                @*<div class="row py-2">
                                    <div class="col-4">
                                        Image
                                    </div>
                                    <div class="col-8">
                                        <InputFile OnChange="HandleSelection"></InputFile>
                                    </div>
                                </div>*@
                                <div class="row py-2">
                                    <div class="offset-4 col">
                                        <button class="btn btn-primary form-control" type="submit">Submit</button>
                                    </div>
                                    @if (objRoom.Id > 0)
                                    {
                                        <div class="col">
                                            <button class="btn btn-danger form-control"
                                                    @onclick="DeleteRoom"
                                                    type="submit">
                                                Delete
                                            </button>
                                        </div>
                                    }
                                </div>
                            </div>
                            @*<div class="col-3">
                                <img src="@convertImageToDisplay(objRoom.Image)" width="100%" />
                            </div>*@
                        </div>
                    </div>
                </div>
            </div>
        </EditForm>
    </div>
}

@code {
    //List<Category> categories;
    List<Room> rooms;

    Room objRoom = new Room();

    bool ShowPopup = false;

    //public byte[] ImageUploaded { get; set; }

    protected override void OnInitialized()
    {
        rooms = Service.GetRooms();
    }

    void AddNewRoom()
    {
        objRoom = new Room();
        //categories = Service.GetCategoryList();
        //objRoom.CategoryId = categories.ToList()[0].Id;
        objRoom.Id = 0;
        ShowPopup = true;
    }

    void EditRoom(Room room)
    {
        objRoom = room;
        //categories = Service.GetCategoryList();
        ShowPopup = true;
    }

    void DeleteRoom()
    {
        ShowPopup = false;
        Service.DeleteRoom(objRoom);
        rooms.Clear();
        rooms = Service.GetRooms();
    }

    void ClosePopup()
    {
        ShowPopup = false;
    }

    void ValidSubmit()
    {
        var result = false;
        ShowPopup = false;
        //if (ImageUploaded != null)
        //{
        //    objRoom.Image = ImageUploaded;
        //    ImageUploaded = null;
        //}

        if (objRoom.Id > 0)
        {
            result = Service.UpdateRoom(objRoom);
        }
        else
        {
            result = Service.CreateRoom(objRoom);
        }

        rooms = Service.GetRooms();
    }

    //async Task HandleSelection(IFileListEntry[] files)
    //{
    //    var file = files.FirstOrDefault();
    //    if (file != null)
    //    {
    //        var ms = new MemoryStream();
    //        await file.Data.CopyToAsync(ms);
    //        ImageUploaded = ms.ToArray();
    //    }
    //}

    string convertImageToDisplay(byte[] image)
    {
        if (image != null)
        {
            var base64 = Convert.ToBase64String(image);
            var finalStr = string.Format("data:image/jpg;base64,{0}", base64);
            return finalStr;
        }
        return "";
    }

    //void CategorySelectionChanged(ChangeEventArgs e)
    //{
    //    if (int.TryParse(e.Value.ToString(), out int id))
    //    {
    //        objRoom.CategoryId = id;
    //    }
    //}
}
